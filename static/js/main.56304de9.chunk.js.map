{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/PageNotFound/PageNotFound.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","App","PageNotFound","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","slug","sex","PeopleTable","people","useParams","map","mother","find","motherName","father","fatherName","born","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","catch","finally","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.56304de9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={slug}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <div className=\"box table-container\">\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person) => {\n            const mother = people.find(({ name }) => (\n              name === person.motherName\n            ));\n\n            const father = people.find(({ name }) => (\n              name === person.fatherName\n            ));\n\n            return (\n              <tr\n                data-cy=\"person\"\n                className={classNames(\n                  { 'has-background-warning': slug === person.slug },\n                )}\n              >\n                <td>\n                  <PersonLink person={person} />\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  {mother ? (\n                    <PersonLink person={mother} />\n                  ) : (\n                    person.motherName || '-'\n                  )}\n                </td>\n                <td>\n                  {father ? (\n                    <PersonLink person={father} />\n                  ) : (\n                    person.fatherName || '-'\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setError(true);\n        setIsLoading(false);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <>\n        {error ? (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        ) : (\n          <>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                {!people.length && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n                <PeopleTable people={people} />\n              </>\n            )}\n          </>\n        )}\n      </>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PageNotFound } from './components/PageNotFound';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={(<PeoplePage />)}>\n            <Route index element={(<PeoplePage />)} />\n            <Route path=\":slug\" element={(<PeoplePage />)} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}